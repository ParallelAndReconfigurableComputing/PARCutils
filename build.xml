<?xml version="1.0" encoding="UTF-8" ?>
<project name="ParaIterator" xmlns:ivy="antlib:org.apache.ivy.ant" default="main" basedir=".">

	<property name="version" value="1.0.0"/>

	<property name="src.dir" location="src"/>
	<property name="test.dir" location="test"/>	

	<property name="target.dir" location="target"/>
	<property name="target.classes.main.dir" location="${target.dir}/classes/main"/>
	<property name="target.classes.test.dir" location="${target.dir}/classes/test"/>
	<property name="target.report.dir" location="${target.dir}/report"/>

	<property name="lib.dir" location="lib" />
	<property name="bin.dir" location="bin" />


	<!-- Dependencies that cannot be fetched from central repository -->
	<path id="build.class.path">
		<fileset dir="${lib.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<!-- For JUnit tests. -->
	<path id="junit.class.path">
		<fileset dir="${lib.dir}">
			<include name="**/*.jar" />
		</fileset>
		<pathelement location="${target.classes.main.dir}" />
		<pathelement location="${target.classes.test.dir}" />
	</path>


	<target name="clean" description="Clean up the existing build.">
		<delete dir="${target.dir}" />
	</target>


	<target name="makedir" description="Creates the folders.">
		<mkdir dir="${target.dir}"/>
		<mkdir dir="${target.classes.main.dir}"/>
		<mkdir dir="${target.classes.test.dir}"/>
		<mkdir dir="${target.report.dir}"/>
	</target>

	<target name="compile" depends="clean, makedir, resolve" description="Compiles the java code">
		<javac includeantruntime="true" srcdir="${src.dir}" destdir="${target.classes.main.dir}">
			<classpath refid="build.class.path" />
		</javac>
		<javac includeantruntime="false" srcdir="${test.dir}" destdir="${target.classes.test.dir}">
			<!-- <classpath refid="build.class.path" /> -->
			<classpath refid="junit.class.path" />
		</javac>
	</target>

	<!-- Output is XML, could also be plain-->
	<target name="test" depends="compile" description="Run the JUnit Tests.">
		<!-- <echoproperties/> -->
		<junit printsummary="yes" fork="true" haltonfailure="yes">
			<classpath refid="junit.class.path" />
			<formatter type="xml" />
			<batchtest todir="${target.report.dir}">
				<fileset dir="${test.dir}">
					<include name="**/*Test*.java" />
				</fileset>
			</batchtest>
		</junit>
	</target>

	<target name="build" depends="compile" description="Build .jar file.">
		<jar destfile="${target.dir}/${ant.project.name}_${version}.jar" basedir="${target.classes.main.dir}"/>
	</target>

	<target name="main" depends="compile, test" description="Compile and Test.">
		<description>Main target</description>
	</target>
	

	<!-- =================================
	Automatically install ivy if not properly installed, and resolve dependencies.
	Never touch anything below!!!!!!!!!!
 		 ================================= -->

	<!-- target: resolve -->
    <target name="resolve" depends="" description="--> retrieve dependencies with ivy">
        <ivy:retrieve />
    </target>

	<property name="ivy.install.version" value="2.3.0" />
    <condition property="ivy.home" value="${env.IVY_HOME}">
      <isset property="env.IVY_HOME" />
    </condition>
    <property name="ivy.home" value="${user.home}/.ant" />
    <property name="ivy.jar.dir" value="${ivy.home}/lib" />
    <property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar" />

    <target name="download-ivy" unless="offline" description="Download ivy from the central repository.">

        <mkdir dir="${ivy.jar.dir}"/>
        <!-- download Ivy from web site so that it can be used even without any special installation -->
        <get src="http://repo2.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar" 
             dest="${ivy.jar.file}" usetimestamp="true"/>
    </target>

    <target name="install-ivy" depends="download-ivy" description="Install ivy if not properly installed.">
		<!-- try to load ivy here from ivy home, in case the user has not already dropped
		it into ant's lib dir (note that the latter copy will always take precedence).
		We will not fail as long as local lib dir exists (it may be empty) and
		ivy is in at least one of ant's lib dir or the local lib dir. -->
        <path id="ivy.lib.path">
            <fileset dir="${ivy.jar.dir}" includes="*.jar"/>

        </path>
        <taskdef resource="org/apache/ivy/ant/antlib.xml"
                 uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
    </target>
</project>